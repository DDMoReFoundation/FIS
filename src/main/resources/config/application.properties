#
# Core SpringBoot application http settings
#
# Note, for nont fis.* properties descriptions please refer to: http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#

server.port=9010
management.port=9011
management.address=127.0.0.1
endpoints.health.enabled=true
endpoints.shutdown.id=hidden_shutdown
endpoints.shutdown.enabled=true

# Should the service account or user account be used for executing the job.
# defaults to false, so jobs will be executed using TES (MIF) service account
# if set to true, fis user account will be used unless User Info on LocalJob is specified, 
# in such case settings specified in UserInfo will be used.
fis.core.user.executeAsUser=false
# FIS user account name
fis.core.user.name=fis
# FIS user account password (unencrypted)
fis.core.user.password=
# Identity file (private key) file of FIS user account.
fis.core.user.identityFile=
# Passphrase for identity (private key) file of FIS user account (unencrypted)
fis.core.user.identityFilePassphrase=
# Authentication protocols and in which order they should be attempted (if comma-separated list is provided), possible values are: password,publickey,keyboard-interactive.
fis.core.user.identityFileAuthenticationProtocols=publickey,password,keyboard-interactive

# MIF connectivity settings
fis.mif.url=http://127.0.0.1:9030/REST/services/
fis.mif.management.url=http://127.0.0.1:9031/

# MIF management endpoints names
fis.mif.management.shutdown=shutdown
fis.mif.management.healthcheck=health

# Flag indicating if MIF supports PHEX Archive
fis.mif.archive.support=false

# Execution host file share locations
fis.fileshare.fisHostPath=
fis.fileshare.mifHostPath=
fis.fileshare.executionHostPath=

fis.resourcePublisher.ctl.publishScript=${FIS_HOME}/scripts/publishInputsVerbatim.groovy
fis.resourcePublisher.ctl.filenamePattern=.*\.(ctl|mod)$
fis.resourcePublisher.pharmml.publishScript=${FIS_HOME}/scripts/publishInputsVerbatim.groovy
fis.resourcePublisher.pharmml.filenamePattern=.*\.(xml|pharmml)$
fis.resourcePublisher.mdl.publishScript=${FIS_HOME}/scripts/publishInputsMdl.groovy
fis.resourcePublisher.mdl.filenamePattern=.*\.mdl$

fis.retrieveOutputs=${FIS_HOME}/scripts/retrieveOutputs.groovy
fis.readResource=${FIS_HOME}/scripts/readMdlResource.groovy
fis.mdlConverter=${FIS_HOME}/scripts/mdlConverter.groovy
fis.writeResource=${FIS_HOME}/scripts/writeMdlResource.groovy

# Advanced options
#
fis.nmTranJobResourcePublisher.skipCopy=false

fis.mdl.ext=mdl
fis.pharmml.ext=xml

#Name of the metadata FIS directory
fis.metadata.dir=.fis

# service working directory - where FIS keeps working files involved in handling clients requests
fis.workingDirectory.path=${FIS_HOME}/tmp

# Delay (in ms) after which FIS working directories are marked as old and scheduled for deletion (default is 1h)
fis.workingDirectory.availabilityTimeout=3600000

# Rate (in ms) at which FIS working directory is scanned for old directories (default in 30s)
fis.workingDirectory.cleanupRate=300000

#
# Converter Toolbox Service integration
#
fis.cts.url=http://127.0.0.1:9020/
fis.cts.management.url=http://127.0.0.1:9021/

# CTS management endpoints names
fis.cts.management.shutdown=shutdown
fis.cts.management.healthcheck=health

# Delay (in seconds) between subsequent Conversion status checks on Converter Toolbox Service
# defaults is 1 
#fis.cts.pollingDelay=1

#Name of the Archive produced during conversion
fis.cts.output.archive=archive.phex

#Name of the file holding conversion report
fis.cts.output.conversionReport=conversionReport.log

# a template for link relations specific to CTS REST
fis.cts.link.relation.template=ddmore:%s

fis.cts.debug=true

#
# Core Languages
#
fis.mdl.version=7.0.0
fis.mdl.name=MDL
fis.pharmml.version=0.8.0
fis.pharmml.name=PharmML
fis.json.version=7.0.0
fis.json.name=JSON


#
# Persistence settings
#
# default to in-memory database
spring.datasource.name=collab
# The above line corresponds to the following configuration
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:collab;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
## Just embedded database is now supported
#spring.jpa.hibernate.ddl-auto=create-drop

#
# Logging setup
#
logging.level.eu.ddmore=INFO
